name: CI

on: 
  push:
  workflow_dispatch:

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Download Ngrok
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive ngrok.zip

    - name: Authorize Ngrok
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Enable Remote Desktop & Firewall Rules
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1

    - name: Set Admin User Password
      run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)

    - name: Check Ngrok Installation
      run: |
        if (Test-Path .\ngrok\ngrok.exe) {
          Write-Host "Ngrok installed successfully."
        } else {
          Write-Error "Ngrok not found. Installation may have failed."
        }

    - name: Start Ngrok Tunnel (RDP)
      run: |
        Start-Process -FilePath ".\ngrok\ngrok.exe" -ArgumentList "tcp 3389 --log ngrok.log" -NoNewWindow
        Write-Host "Ngrok tunnel started successfully."
      timeout-minutes: 120

    - name: Retry Ngrok on Failure
      if: failure()
      run: |
        Write-Host "Ngrok failed. Retrying..."
        Start-Sleep -s 30  # Wait for 30 seconds before retrying
        Start-Process -FilePath ".\ngrok\ngrok.exe" -ArgumentList "tcp 3389 --log ngrok.log" -NoNewWindow

    - name: Log RDP Connection Details
      run: |
        if (Test-Path ".\ngrok.log") {
          $ngrokLog = Get-Content -Path ".\ngrok.log" -Tail 50
          Write-Host "Ngrok Tunnel Log: $ngrokLog"
        } else {
          Write-Host "Ngrok log file not found."
        }

    - name: Keep Runner Alive (for 24/7)
      run: |
        while (1) {
          Start-Sleep -Seconds 300  # Keep the process alive
        }
